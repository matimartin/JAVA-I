/*
 * Laboratorio I - TP 6 - Variables Dimensionadas
 * Martin Hector Matias
 * Ultima modificacion 06/11/2014
 */

package tp6;

import javax.swing.JOptionPane;

public class TP6 {
    
    //static int valor[] = new int[50]; // Variables globales del ejercicio 2
    //static int i, prom, a;    // Variables globales del ejercicio 2
    public static int filaCol[][] = new int[10][10]; // Variables globales EJERCICIO EXTRA
    public static int dim=5, proms=0, i, j, k;  // Variables globales EJERCICIO EXTRA   

    public static void main(String[] args) {
        
/*EJERCICIO 1) Calcular el promedio de 50 valores almacenados en un vector. Determinar además cuantos son 
mayores que el promedio, imprimir el promedio, el número de datos mayores que el promedio y una lista de 
valores mayores que el promedio.
        
        float valor[] = new float[50];
        int i, contador=0;
        float suma=0, prom;
        
        for(i=0; i<valor.length; i++){
            valor[i] = (float)(Math.random()*100);            
            suma = (suma + valor[i]);           
        }   // Fin bucle for
        
        prom = suma/valor.length;
        System.out.println("promedio: "+prom);
        System.out.println("Los valores mayores al promedio son: ");
        
        for(i=0; i<valor.length; i++){
            if(valor[i] > prom)
                System.out.println(valor[i]+", ");
            contador ++;          
        } // Fin bucle for
        
        System.out.println("hay "+contador+ " numeros mayores que el promedio");
        
    }   // Fin public static void main ejercicio 1 
        
/*2) Desarrolle el programa anterior, definiendo una función que sirva para decidir cuándo un número 
contenido en el arreglo es mayor que el promedio.
        
        int contador=0, suma=0;
        
        for(i=0; i<valor.length; i++){
            valor[i] = (int)(Math.random()*10);
            suma = suma + valor[i];
        }   // Fin bucle for
        prom = suma/valor.length;
        System.out.println("El promedio es: "+prom);
        for(i=0; i<valor.length; i++){
            if(valor[i] > prom)
                contador ++;
        }   // Fin bucle for
        
        System.out.println("Existen "+contador+" numeros mayores que el promedio");
        
        mayor(a);   // Llamo al metodo funcion
        
    }   // Fin public static void main ejercicio 2
    
    public static int mayor(int a){
        
        for(i=0; i<valor.length; i++){
            if(valor[i] > prom)
                a = valor[i];      
        System.out.println("el numero " +a+ " es mayor que el promedio");
        }   // Fin bucle for
        
        return a;
        
    }   // Fin metodo funcion int mayor
        
/*EJERCICIO 3) Almacenar 150 números en un vector, almacenarlos en otro vector en orden inverso al vector 
original e imprimir el vector resultante.
        
        int num1[] = new int [150];   
        int num2[] = new int [150];
        int i;
        
        System.out.print("vector positivo: ");
        for(i=0; i < num1.length; i++){
            num1[i] = (int)(Math.random()*10);
            System.out.print(num1[i]+", ");
        }   // Fin bucle for
        
        System.out.println("");
        System.out.print("vector inverso:  ");
        for(i=0; i<num2.length; i++){
            num2[i] = num1[(num1.length - 1)-i];
            System.out.print(num2[i]+", ");
        }   // Fin bucle for
        System.out.println("");
        
    } // Fin public static void main ejercicio 3
        
/*EJERCICIO 4) Se tienen almacenados en la memoria dos vectores M y N de cien elementos cada uno. Hacer un
algoritmo que escriba la palabra “Iguales” si ambos vectores son iguales y “Diferentes” si no lo son. Serán
iguales cuando en la misma posición de ambos vectores se tenga el mismo valor para todos los elementos.
        
        int M[] = new int[100];
        int N[] = new int[100];
        int i, contador=0;
        
        System.out.print("Vector M: ");
        
        for(i=0; i<M.length; i++){
            M[i] = (int)(Math.random()*10);
            System.out.print(M[i]+ ", ");
        }   // Fin bucle for
        
        System.out.println("");
        System.out.print("Vector N: ");
        
        for(i=0; i<N.length;i++){
            N[i] = (int)(Math.random()*10);
            System.out.print(N[i]+ ", ");
        }   // Fin bucle for
        
        for(i=0; i<100; i++){
            if(M[i] == N[i])
                contador ++;
        }   // Fin bucle for
        
        System.out.println("");
        
        if(contador == 100)
            System.out.println("Los vectores M y N son iguales");
        else
            System.out.println("Los vectores M y N son distintos");
        
    }   // Fin public static void main ejercicio 4
    
/*EJERCICIO 5) Hacer un algoritmo que llene una matriz de n * n. Sumar las columnas e imprimir que columna
tuvo la máxima suma y la suma de esa columna.
        
        String dim_s = JOptionPane.showInputDialog("Ingrese el numero la dimension de la matriz");
        int dim = Integer.parseInt(dim_s);
        int i, j, suma=0, sumaMax=0, colMax=0;
        int matriz[][]=new int [dim][dim];
        
        for(i=0; i<dim; i++){
            for(j=0; j<dim; j++){
                matriz[i][j] = (int)(Math.random()*10);
            }   // Fin bucle for
        }   // Fin bucle for
        
        for(i=0; i<dim; i++){
            for(j=0; j<dim; j++){
                if(j == (dim-1))
                    System.out.println(matriz[i][j]+" ");
                else
                    System.out.print(matriz[i][j]+" ");                
            }   // Fin bucle for
        }   // Fin bucle for
        
        for(i=0; i<dim; i++){
            for(j=0; j<dim; j++){
                if(i == (dim-1))
                    suma=suma+matriz[i][j];
                    sumaMax = suma;
                    colMax=i;               
                }      
            }
     
        System.out.println("La columna que tiene la suma maxima es: "+colMax);
        System.out.println("La suma maxima es: "+sumaMax);        
          
    }   // Fin public static void main ejercicio 5
    
 /*EJERCICIO 6) Hacer un algoritmo que llene una matriz de 5 * 5 y que almacene la diagonal principal 
en un vector. Imprimir el vector resultante.
        
        int matriz [][] = new int [5][5];
        int vector [] = new int [5];
        int i, j, numero, dim=5;
    
        for(i=0;i<5;i++){
            for(j=0;j<5;j++){
                numero = (int)(Math.random()*10);
                matriz[i][j]=numero;
            }
        }
    
        for(i=0; i<5; i++){
            for(j=0; j<5; j++){
                if(j == (dim-1)){
                    System.out.println(matriz[i][j]+" ");
                }else{
                    System.out.print(matriz[i][j]+ " ");
                }
            }
        }
    
        for(i=0;i<5;i++){
            for(j=0;j<5;j++){
                if(i == j){
                    vector[i] = matriz[i][j];
                }
            }
        }
    
        System.out.print("Diagonal principal: ");
        
        for(i=0; i<5; i++){
            System.out.print(vector[i]+" ");
        }        
        
    }   // Fin public static void main
    
/*EJERCICIO 7) Desarrolle el programa anterior, definiendo una función que sirva para indicar el índice 
correspondiente a la diagonal principal.
        
        int matriz [][]=new int [5][5];
        int vector []=new int [5];
        int i,j,numero,dim=5;
    
        for(i=0;i<5;i++){
            for(j=0;j<5;j++){
                numero=(int)(Math.random()*10);
                matriz[i][j]=numero;
            }
        }
    
        for(i=0;i<5;i++){
            for(j=0;j<5;j++){
                if(j==(dim-1)){
                    System.out.println(matriz[i][j]+" ");
                }else{
                    System.out.print(matriz[i][j]+ " ");
                }
            }
        }
        
 /*EJERCICIO 8) Desarrolle el programa del ejercicio 6), para la diagonal inversa.
        
        int matriz[][] = new int [5][5];
        int inversa[] =new int [5];
        int i, j, numero, dim=5, dimj, dimi;
    
        for(i=0; i<5; i++){
            for(j=0;j<5;j++){
                numero = (int)(Math.random()*10);
                matriz[i][j] = numero;
            }
        }
    
        for(i=0;i<5;i++){
            for(j=0;j<5;j++){
                if(j==(dim-1)){
                    System.out.println(matriz[i][j]+" ");
                }else{
                    System.out.print(matriz[i][j]+ " ");
                }
            }
        }
    
        System.out.print("La diagonal inversa es: ");
        
        for(i=(dim-1); i>=0; i--){
            for(j=0; j<5; j++){
                if(((dim-1)-i)==j){
                    inversa[j]=matriz[i][j];
                    System.out.print(inversa[j]+" ");
                }
            }
        }      
        
    }   // Fin public static void main
    
    /*EJERCICIO 9)Desarrolle un programa que, teniendo una matriz de n x n, muestre los elementos en
forma de espiral desde el elemento central hacia fuera. En este ejercicio no se limita el tipo de dato.
    
        int matriz [][] = new int [5][5];
        int k=1;

//carga la matriz con valores del 1 al 25
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                matriz[i][j] = k;
                k++;
            }
        }
//muestra la matriz completa
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                System.out.print(matriz[i][j] + "\t");
            }
        System.out.println("\n");
        }

        System.out.println("Matriz en forma espiral: ");

        for (int i = 2; i < 4; i++){
            System.out.print(matriz[2][i] + " ");
        }

        for (int i = 3; i > 0; i--){
            System.out.print(matriz[1][i] + " ");
        }

        for (int i = 2; i < 4; i++){
            System.out.print(matriz[i][1] + " ");
        }

        for (int i = 2; i < 5; i++){
            System.out.print(matriz[3][i] + " ");
        }

        for (int i = 2; i > -1; i--){
            System.out.print(matriz[i][4] + " ");
        }
        
        for (int i = 3; i > -1; i--){
            System.out.print(matriz[0][i] + " ");
        }
        
        for (int i = 1; i < 5; i++){
            System.out.print(matriz[i][0] + " ");
        }
        
        for (int i = 1; i < 5; i++){
        System.out.print(matriz[4][i] + " ");
        }
        
    } // Fin public static void main
        
/*EJERCICIO EXTRA) Teniendo una matriz cuadrada, se busca el elemento central y se obtiene el promedio de la suma de 
todos los elementos que rodean al centro mas el centro mismo.

    float prom;
    // inicializo matriz
        for (i=0; i<=(dim-1); i++) {                // siendo: i=fila; j=columna 
            for (j = 0; j<=(dim-1); j++){
                k = (int)(Math.random()*10)-1;
                if (k <= 0)
                    k=1;
                    filaCol[i][j]=k;
            }       
        }
    // muestro matriz  
        for (i=0; i<=(dim-1); i++){
            for (j=0; j<=(dim-1); j++){
                if(j == (dim-1))
                    System.out.println(filaCol[i][j]);
                else
                    System.out.print(filaCol[i][j]+" ");
                }
            
        }
        for (i=0; i<=(dim-1); i++){ 
            for (j=0; j<=(dim-1); j++){ 
                if((filaCol[i][j] % 2) == 0){
                    System.out.println(" par: "+filaCol[i][j]+"; fila: "+i+"; col: "+j);
                    prom = obtieneProm(i, j, dim);
                    System.out.println("promedio: "+prom);
                    proms++;
                }
            }
        }
        
    }   // Fin public static void main
    
    public static float obtieneProm(int a, int b, int d){   // fila, columna, dimension=5
        
    int caso=25, cuenta=0, suma=0, f, c, inicioF, inicioC, finF, finC;
    float resul;
    
    if(a == 0)
        if(b == 0)
            caso = 0;
        else
            if(b == (d-1)) 
                caso = 1;
            else    
                caso = 5;
    else
        if(a == (d-1))
            if(b == (d-1))
                caso = 2;
            else
                if(b == 0) 
                    caso = 3;
                else    
                    caso = 7;
        else
            if(b == (d-1))
                caso = 6;
            else
                if(b == 0) 
                    caso = 4;
    switch(caso){
            case 0:
                inicioF = inicioC = 0;  //inicio Fila; inicio Columna
                finF = finC = 1;    // fin Fila; fin Columna
                break;
            case 1:
                inicioF = 0;
                finF = 1;
                inicioC = (b-1);
                finC = b;
                break;
            case 2:
                inicioF = (a-1);
                finF = a;
                inicioC = (b-1);
                finC = b;
                break;
            case 3:
                inicioF = (a-1);
                inicioC = 0;
                finF = a;
                finC = 1;
                break;
            case 4:
                inicioF = (a-1);
                inicioC = 0;
                finF = (a+1);
                finC = 1;
                break;
            case 5:
                inicioF = 0;
                finF = 1;
                inicioC = (b-1);
                finC = (b+1);
                break;
            case 6:
                inicioF = (a-1);
                finF = (a+1);
                inicioC = (b-1);
                finC = b;
                break;
            case 7:
                inicioF = (a-1);
                finF = a;
                inicioC = (b-1);
                finC = (b+1);
                break;
            default:           
                inicioF = (a-1);
                inicioC = (b-1);
                finF = (a+1);
                finC = (b+1);           
    }   
    
    for (f=inicioF; f<=finF; f++){
        for (c=inicioC; c<=finC; c++){
            suma+=filaCol[f][c];
            cuenta++;
        }
    }
            resul = ((float) suma/cuenta);
    return resul;        
        
    }   // Fin metodo funcion public static float obtieneprom
    
/*EJERCICIO EXTRA) Dada una matriz mostrar su primer columna, su diagonal ppal, y su elemento central*/
        
        int mat[][]=new int [10][10];
        int dim=5, i , iz;
        float redondo,res;
        
        
        for(i=0; i<=(dim-1); i++){                      //inicializado matriz
            for (iz=0; iz<=(dim-1); iz++){
                redondo= (float)Math.random()*10;
                mat[i][iz]=(int)redondo;
            }
        }
        
        for (i=0; i<=(dim-1); i++){                      //muestro matriz
            for (iz=0; iz<=(dim-1); iz++){
                if(iz==(dim-1))
                    System.out.println(mat[i][iz]);
                else
                    System.out.print(mat[i][iz]+"  ");
            }
        }
        
         System.out.println("");
        
         for (i=0; i<=(dim-1);i++){                      //muestro diagonal principal
            for (iz=0; iz<=(dim-1);iz++){
                if(i==iz)
                    System.out.print(mat[i][iz]+" ");
                if(iz==(dim-1))
                    System.out.println("");
                if(i<=(dim-1)&& iz!=(dim-1))
                    System.out.print("  ");
                
                if(iz==(dim-1)&& i==(dim-1))
                    System.out.println("");
                
            }
        }
         
         System.out.println("");
         
          for (i=0; i<=(dim-1);i++){                      //muestro primera columna
            for (iz=0; iz<=(dim-1);iz++){
                if(i<=(dim-1)&& iz==0)
                    System.out.println(mat[i][iz]);
                              
            }
        }
          
         System.out.println("");
         
          for (i=0; i<=(dim-1);i++){                      //muestro elemento central
            for (iz=0; iz<=(dim-1);iz++){
                if(((dim)%2)!=0){
                    res=((dim%2)+(dim/2));
                    if(i==(res-1)&& iz==(res-1))
                    System.out.println(mat[i][iz]);
                }else{
                    System.out.println("No tiene elemento central");
                }              
            }
        }        
        
    }   // fin main
        
}   // Fin class TP6
